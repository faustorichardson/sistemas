<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAHRklEQVRYR+VW+U/U+RkeZn/Y1HW1rMohyDEgIMdweHHIMQiKIOdy
        I/ctqHgQFUGioIKKF4qAoqhcWmyb+Afsomma2tZFcdfFI9k066ZNmvhTk/Wnp+/zmX6nM9ZdMOkvTSd5
        EoaZ+T7P+77P+3w+Ot3/wGuhaDwvGPov4qo8K2q+tZvKy8tx7do1XLp0CWfOnEFXVxeOHDmCQ4cOobm5
        GU1NTWhoaEBNTQ0qKytRVlaGwsJCpKSk2GDr1q0gCgoKIOQUMa+XqaqqSpGfPHkSnZ2daGtrw/79+7Fn
        zx7s2LEDdXV1qK6uBoWWlJRg27ZtSExMhLOzs8Ly5csVXFxcFNLS0iiAHZ3Xy1RbW4vBwUGcPXtWVX/0
        6FG0trbaiKivr7d0gEKSkpIspK6uriBWrFihkJ6e/mECtm/fjuvXr1tGcOLECRsRe/fuxc6dO9UYtG4k
        JydbSN3c3EC4u7srZGZmfpgAPnh0dFR14eLFi+jp6YG1iAMHDoAi6IXGxkawG6mpqRZSDw8PEJ6engpZ
        WVlzCxjR6coFdjIkEwWMj4+rLgwMDKC3t9dGBD1x8OBB7Nu3D7t371a+YJutSQ0GA7y8vBSys7PnFnDP
        1/fNHXv7yx/pdBspYGJiAsPDw7hy5QouX76MCxcuKBGaJw4fPqxEcCsoglVak3p7e4NYuXIlcnJy5hZw
        PyXlzavTp9G+YMHDRhFw+/Zt3LhxA0NDQ+jv71ejoClPnTqF48ePK0+wExwHO8EqNUKS+vj4KPj6+iIv
        L29uAVNJSW/+JlXOykPHtmzBr+7cwc2bN1UecAxcy3PnzuG0iKQfOjo6wC60tLSoLuTm5qpqNVI/Pz8Q
        q1atQn5+/r8FyJyXTnz6af+ko+PApJOTBQ+Sk3/8XoLmL2KsZ4JxETFy65byAcfQ19dnGUN3d7fKh2PH
        jqnxUAirZLUaqb+/P4iAgAAtiMw5IAKMfxRFr6WFryXdXkslr+VBP8gDv5OAeSWffSfpNiNhNLp5s/LB
        1atXFRHNyGRkQJGco6C4yclJlQmsViMNDAwEERQUhKKiIpsOGB+KYV4KXkh0vhD3vpQ95fuXGRl4Iev0
        XKp/JS2dlqpGEhIwJAI4BvqAY6APtLWkB+7du4eKigpVrUZKYqPRiODgYJWUliRkB/4g+fxckmvWZMLs
        xo14LjFKzArZbHw8vo2NxbPISPWdP0vA3JT/Df7LB+fPn1c+4DZwDCRnZ2hCkmukJA4JCVFgXNsI+P2m
        Tfh2wwY8lRnNiHFmZF2eyo+frV+v8M2aNfhafvhUKqKQh/LdYRGhrSPHQB8wKwgGEqvUyEkaGhqKsLAw
        hdLSUlsBD4Tgq8WL8SedzhZ2dni0aBEey4HyWLJ82tFRiXggbh6WcXEdWa22jkxLGpCnJEmsiVevXo01
        wkPwrLDpwJRU+2jhwv8U8I6gx3Ki3ZdEGxZPMA9+bh15JLNajXjt2rVYt26dAv1hEXBDPDAlbn30ySc/
        K2BaunBf8vyajIvEBM8GriN9oKUifdDe3q5ISK4Rr5dRhoeHK/DOYBHQr9OFfiEJNSMzeiKdeCItfixe
        eEJR0n6Oha2/L6fZoBiUzicp508R71tHXlZIYk0eEREBIlI8xLuDRUCHTuc4ZGfXN6jXX+nT669f0Otv
        ndXrx367ZMk/ppctw7SDA6Zk/v1xcWrnKYCknD878FOxTBK2mxVrxFFRUdggBmZGWF9I9PJmgeAzgYvA
        IPD/tb39X2ekM1Nyg+mVH7LNNBwJGTYMI/qAIhjL1uvIWCaJRq4RR0dHIyYmRt0Z3r0RUcQvBL8UOFDI
        bxYv/uFLmXuTTvc73u9IRGJGMc8E4n2xzDyor6+DyRSHiMhwREVFIjp6A2JioxEXF4M4U6z6/KeuZHL6
        6j4WLBzV67+XsO6Rv1O5NlyxkZERtec8GfmepyM7oa1jS0szUtPiEBMXgrj4MMQnrEZC4lokbl6HzUnh
        SNoSgaTkSOxqsh3Bey+Gt3S6TYvMF5J4tvPu3bu4IyciQQFjY2OqCxzDyVMdKCpJQOIWH2xK9kPS1lVI
        Tg1ASnoQUjOMSMsKRvrnocjIDkNmThia91vlwDyupaaaWlsBFMELysDgRTTsSkVqlrtCWrYHMnIMyMzz
        Qla+N7ILfJBT6IvcIj/kFcsxXOyPgpIAtLQVz30fsBJmercDI6PDaD1SiLxSF+QUOyK3xEn+dkZ+mQsK
        yl1RWLECRZVu2FblhuJqD5TUeKC0xhNltQaU1RnQ3mF1H5hXB2qq1QgmJsbQ3VODqkZXlNbao7TuM5TV
        L0G5oGL7UoXKhmWobHSQ7zigeocjqnc6oYbY5Yxaomk5Ors//9AOVGH89hl09sSi9Zi/IACtx81oUwg0
        40QgDisEmdFlRnuX0YxuM3p653EpteqMl5Pz0r/7B7q9JQIC3c0Icn8bGORhhtGMIKOnGcGeb43BBjNC
        DG+DQ7wsCAn1lt8YfpTn75lH9/8PvvJPBonvybZnnbAAAAAASUVORK5CYII=
</value>
  </data>
</root>