<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAnular.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>