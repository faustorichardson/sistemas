<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="btnImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>